from src.loadconf import CONFIG
from src.urlproducer import (
    AlibabaSearchTab,
    AlibabaSearchUrlProducer,
    AlibabaSupplierCountry,
)


def main():
    """
    Entrypoint of this program.

    Adopting ``if __name__ == "__main__"`` pattern and defining ``main()`` function
    simultaneously is **VERY** necessary.

    1. We use :var:`__name__` variable to detect whether the current module is executed
    as a script, not imported as lib.

    2. If we don't define the ``main`` function, any variable declared in the ``if``
    statement will become **GLOBAL**. That may cause some covert errors and bugs.

    Additionally, the `main()` function should not receive any arguments. Startup
    arguments should be written in configuration files.
    """

    # Test the correctness of UrlProducer.
    #
    # Print the URLs generated by legacy code and new code, and visit the sites manually.
    # No difference is found.

    # New code
    for keyword in CONFIG["search"]["keywords"]:
        url = AlibabaSearchUrlProducer.produce(
            keyword,
            tab=AlibabaSearchTab.Suppliers,
            country=AlibabaSupplierCountry.China,
        )
        print(url)

    # Legacy code
    keywords = ["Hailing", "Gaogang", "Jiangyan", "Xinghua", "Jingjiang", "Taixing"]
    for key in keywords:
        url = f"https://www.alibaba.com/trade/search?n=38&SearchText={key}&indexArea=company_en&Country=CN"
        print(url)


# Guideline recommended Main Guard
#
# This is VERY necessary to both adopting ``if __name__ == "__main__"`` pattern and
# self-defined ``main()`` function. About more detail, see :func:`main`.
if __name__ == "__main__":
    main()
